open
help open
open -h
? open
? csv
??csv
?read.table
read.csv('tmp_results.csv')
data=read.csv('tmp_results.csv')
data
data=read.csv('tmp_results.csv',sep=';')
data
summary(data)
data[C==0.5]
data[C=='0.5']
data[data$C=='0.5']
data$C
data[C='0.5']
data['C'='0.5']
data$C='0.5'
data$C
data=read.csv('tmp_results.csv',sep=';')
? filter
data[1]
data[2]
data[4]
data[5]
data[data$C==0.5]
data[data$C=='0.5']
data['data$C'=='0.5']
data['data$C'==0.5]
data['data$C'=='2.5']
data['data$C'=='2.5'
read.csv('data140108_1.csv')
data=read.csv('data140108_1.csv')
summary(data)
plot(data)
data$heuristics
max(data$max_win)
plot(data$max_win)
plot(data$iterations,data$max_win)
data
summary(data)
describe(data)
library(psych)
install.packages("psych")
library(psych)
describe(data)
data
data[data$C = 0.5,]
data[data$C = 0.5]
data[data$C == 0.5]
data[data$C == 0.5]
data$C
data[data$C]
data[data$C > 0]
data[which(data$C == 0.5)]
data[which(data$C == "0.5")]
which(data$C == 0.5)
data[which(data$C == 0.5)]
data[][which(data$C == 0.5)]
data[,which(data$C == 0.5)]
data[which(data$C == 0.5),]
data[which(data$C == 0.5),]$C
data[which(data$C == 0.5),]
data[which(data$C == 0.5),][which(data$heuristics == '3']
data[which(data$C == 0.5),][which(data$heuristics == '3',]
data[which(data$C == 0.5),][which(data$heuristics == 3,]
data[,which(data$C == 0.5),][which(data$heuristics == 3,]
data[0]
data[1]
data[2]
data[,1]
data[,2]
data[1]
data[,1]
data[,data$C]
data[,data$C=2.5]
data[,data$C==2.5]
data[data$C==2.5]
data$C==2.5
data[data$C==2.5]
data[data$C==2.5,]
data[data$C==2.5,]$C
data[data$C==2.5,]
order(data[data$C==2.5,])
data[data$C==2.5,][order(Iterations),]
data[data$C==2.5,][order(iterations),]
data[data$C==2.5,][order(data$iterations),]
data[data$C==2.5,][order(data$iterations),][0]
data[data$C==2.5,][order(data$iterations),][0,]
data[data$C==2.5,][order(data$iterations),][1,]
data[data$C==2.5,][order(data$iterations),][,1]
data[data$C==2.5,][order(data$iterations),][,2]
order
order(data)
?order
data[data$C==2.5,]
data[data$C==2.5,0]
data[data$C==2.5,1]
data[data$C==2.5,][,]
data[data$C==2.5,][order(data),]
library('ggplot2')
#Average 
data=read.csv('mancala_data.csv')
v=data[data$c==2.5 & data$policy == 2 & data$back_propagation == 1 &  data$heuristics == 3 & data$min_alg == 'UCT' & data$pits == 6,]
pdf('mancala6stsAVG.pdf')
ggplot(v,aes(x=v$iterations, y=v$max_win, group=factor(v$sts_size))) + geom_line(aes(linetype = factor(v$sts_size))) + geom_point(size=2) + ggtitle("Mancala TSMCTS with TSST") + ylab(" % win rate") + xlab("#iterations") + scale_linetype_discrete(name="STTS Threshold:") + theme_bw()+ theme(legend.position="top") + theme(legend.position="top")
dev.off()
pdf('mancala6sts1000AVG.pdf')
ggplot(v,aes(x=v[v$sts_size=='1000',]$iterations, y=v[v$sts_size=='1000',]$max_win)) + geom_line(aes(size = 4)) + geom_point(size=4) + ggtitle("Size based TS(1000)") + ylab(" % win rate") + xlab("#iterations")
dev.off()
v=v[(v$sts_size=='1000' & v$iterations=='10000') | (v$sts_size=='100' & v$iterations=='1000') | (v$sts_size=='500' & v$iterations=='5000')]
ggplot(v,aes(x=v$iterations, y=v$max_win)) + geom_line(aes(size = 4)) + geom_point(size=4) + ggtitle("Size based TS(1000)") + ylab(" % win rate") + xlab("#iterations")
pdf('mancala6sts100AVG.pdf')
ggplot(v,aes(x=v[v$sts_size=='100',]$iterations, y=v[v$sts_size=='100',]$max_win)) + geom_line() + geom_point(size=4) + ggtitle("Size based TS(100)") + ylab(" % win rate") + xlab("#iterations")
dev.off()
data
v
ggplot(v,aes(x=v[v$sts_size=='1000',]$iterations, y=v[v$sts_size=='1000',]$max_win)) + geom_line(aes(size = 4)) + geom_point(size=4) + ggtitle("Size based TS(1000)") + ylab(" % win rate") + xlab("#iterations")
source('load_file.r')
source('load_file.r')
source('load_file.r')
